services:
    api-gateway:
        build:
            context: ./api-gateway
        container_name: api-gateway
        ports:
            - "8080:8080"
        networks:
            - project-network
        depends_on:
            consul
        #   - redis
        #   - kafka

    event-service:
        build:
            context: ./event-service
        container_name: event-service
        ports:
            - "8082:8082"
        environment:
            - POSTGRES_HOST=postgres
            - POSTGRES_PORT=5432
            - POSTGRES_DB=event_db
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        depends_on:
            - postgres
        networks:
            - project-network

    postgres:
        image: postgres:13
        container_name: postgres
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - pgdata:/var/lib/postgresql/data
            - ./event-service/database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - project-network
    
    consul:
        image: consul:1.15
        container_name: consul
        ports:
            - "8500:8500"  # HTTP UI/API
            - "8600:8600/udp"  # DNS
        command: "agent -dev -client=0.0.0.0"
        networks:
            - project-network


    # redis:
    #   image: redis:7
    #   container_name: redis
    #   networks:
    #     - project-network

    # kafka:
    #       image: bitnami/kafka:latest
    #       container_name: kafka
    #       ports:
    #           - "9092:9092"
    #       environment:
    #           - KAFKA_CFG_NODE_ID=1
    #           - KAFKA_CFG_PROCESS_ROLES=broker,controller
    #           - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
    #           - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093
    #           - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    #           - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
    #           - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    #           - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    #           - KAFKA_BROKER_ID=1
    #           - KAFKA_CFG_BROKER_RACK=1
    #       healthcheck:
    #           test:
    #               [
    #                   "CMD-SHELL",
    #                   "kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1",
    #               ]
    #           interval: 10s
    #           timeout: 5s
    #           retries: 10
    #       volumes:
    #           - kafka_data:/bitnami/kafka

networks:
    project-network:
        driver: bridge

volumes:
    kafka_data:
    pgdata:
